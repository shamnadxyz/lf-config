set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set cursorpreviewfmt "\033[7;2m"
set ignorecase true

set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/clean

# show the result of execution of previous commands
map ` !true

map o &mimeopen $f
map O $mimeopen --ask $f

cmd extractToDir ${{
    read -p "Create new directory? [y/n] " newDir
    read -p "Name: " dir
    if [[ "$newDir" = "y" ]] then
      mkdir "$dir"
    fi
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2|*.tar.gz|*.tgz|*.tar.xz|*.txz|*.rar|*.tar|*.7z|*.zip) 7zz x $f -o$dir;;
    esac
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2|*.tar.gz|*.tgz|*.tar.xz|*.txz|*.rar|*.tar|*.7z|*.zip) 7zz x $f ;;
    esac
}}

cmd trash ${{
    set -f
        printf "$fx\n"
        printf "move to trash?[y/n]"
        read ans
        [ "$ans" = "y" ] && mv $fx ~/.trash
}}

cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

cmd archiveToZip ${{
    set -f
        printf "$fx\n"
        printf "archive to zip?[y/n]"
        read ans
        if [[ $ans = "y" ]] then
        read -p "Archive name:" name
        7zz a ${name}.zip -tzip $fx -mx=0
        fi
}}

cmd archiveTo7zip ${{
    set -f
        printf "$fx\n"
        printf "archive to 7zip?[y/n]"
        read ans
        if [[ $ans = "y" ]] then
        read -p "Archive name:" name
        7zz a ${name}.7z -t7z $fx
        fi
}}

# Mapping
map D trash
map X delete
map R rename
map Q quit
map az archiveToZip
map a7 archiveTo7zip
map ax extract
map ad extractToDir
map q ;
map r ;
